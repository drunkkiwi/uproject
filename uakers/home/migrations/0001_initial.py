# Generated by Django 2.1.4 on 2019-01-14 01:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_year', models.CharField(choices=[('Fr', 'Freshman'), ('So', 'Sophomore'), ('Ju', 'Junior'), ('Se', 'Senior')], max_length=2)),
                ('profile_sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('N', 'Neither / Dont want to specify')], max_length=1)),
                ('profile_image', models.CharField(blank=True, max_length=700)),
                ('profile_slug', models.SlugField(blank=True, max_length=900)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfessionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('comment_created_at', models.DateTimeField(auto_now_add=True)),
                ('comment_upvotes_int', models.IntegerField(default=0)),
                ('comment_slug', models.SlugField(blank=True, max_length=900)),
                ('comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Confessions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confession_title', models.CharField(max_length=100)),
                ('confession_body', models.TextField()),
                ('confession_upvotes_int', models.IntegerField(default=0)),
                ('confession_views', models.IntegerField(default=0)),
                ('confession_created_at', models.DateTimeField(auto_now_add=True)),
                ('confession_updated_at', models.DateTimeField(auto_now=True)),
                ('confession_slug', models.SlugField(blank=True, max_length=900)),
                ('confession_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('confession_downvotes', models.ManyToManyField(blank=True, related_name='confession_downvotes', to=settings.AUTH_USER_MODEL)),
                ('confession_upvotes', models.ManyToManyField(blank=True, related_name='confession_upvotes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='confessioncomment',
            name='comment_confession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Confessions'),
        ),
        migrations.AddField(
            model_name='confessioncomment',
            name='comment_downvotes',
            field=models.ManyToManyField(blank=True, related_name='comment_downvotes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='confessioncomment',
            name='comment_upvotes',
            field=models.ManyToManyField(blank=True, related_name='comment_upvotes', to=settings.AUTH_USER_MODEL),
        ),
    ]
